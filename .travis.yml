# We deliberately don't use travis's language=python option because
# we install miniconda and use conda to get python. Additionally,
# Travis's auto-install of python doesn't work on osx images (see
# https://github.com/travis-ci/travis-ci/issues/4729).
language: generic
sudo: false
os:
  - linux
arch: 
  - arm64
addons:
  firefox: latest

env:
  global:
    - PYENV_VERSION=3.6
    - CHANS_DEV="-c pyviz/label/dev"
    - CHANS="-c pyviz"

stages:
  - test_pyviz_comms
  - test_jlab
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$

jobs:
  include:
    ########## DEVELOPER INSTALL ##########

    - &default
      stage: test_pyviz_comms
      env: DESC="dev test_flakes"
      before_install:
        - sudo pip install pyctdev
        - wget "https://github.com/Archiconda/build-tools/releases/download/0.2.3/Archiconda3-0.2.3-Linux-aarch64.sh" -O archiconda.sh
        - chmod +x archiconda.sh
        - bash archiconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - sudo ln -s $HOME/miniconda/bin/conda /usr/bin/
        - sudo doit ecosystem_setup
      install:
        - sudo conda create -n test-environment python=$PYTHON_VERSION
        - source activate test-environment
        - sudo pip install flake8 nose param>=1.7.0 setuptools
      script: sudo doit test_flakes

    - stage: test_jlab
      before_install:
        - wget https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz
        - mkdir geckodriver
        - tar -xzf geckodriver-v0.11.1-linux64.tar.gz -C geckodriver
        - export PATH=$PATH:$PWD/geckodriver
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start || true
        - pip install pyctdev
        - wget "https://github.com/Archiconda/build-tools/releases/download/0.2.3/Archiconda3-0.2.3-Linux-aarch64.sh" -O archiconda.sh
        - chmod +x archiconda.sh
        - bash archiconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - sudo ln -s $HOME/miniconda/bin/conda /usr/bin/
        - sudo doit ecosystem_setup
      install:
        - sudo conda create -n test-environment python=$PYTHON_VERSION
        - source activate test-environment
        - sudo pip install nodejs notebook selenium
        - sudo pip install --pre jupyterlab
      script:
        - npm install
        - npm run build
        - jupyter labextension install .
        - jupyter lab clean
        - jupyter labextension link .
        - python -m jupyterlab.selenium_check

    ########## END-USER PACKAGES ##########

    ### CONDA ####

    - <<: *default
      stage: conda_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit package_build $CHANS_DEV --no-pkg-tests
      script:
        - doit package_upload --token=$ANACONDA_TOKEN --label=dev

    - <<: *default
      stage: conda_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit package_build $CHANS --no-pkg-tests
      script:
        - doit package_upload --token=$ANACONDA_TOKEN --label=dev --label=main

    ### PyPI ###

    - <<: *default
      stage: pip_dev_package
      env: PYPI="https://test.pypi.org/legacy/" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit develop_install $CHANS_DEV -o tests && pip uninstall -y pyviz_comms
        - doit pip_on_conda
        - doit ecosystem=pip package_build --no-pkg-tests
      script: doit ecosystem=pip package_upload -u $TPPU -p $TPPP -r ${PYPI}

    - <<: *default
      stage: pip_package
      env: PYPI="https://upload.pypi.org/legacy/" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit develop_install $CHANS_DEV -o tests && pip uninstall -y pyviz_comms
        - doit pip_on_conda
        - doit ecosystem=pip package_build --no-pkg-tests
      script: doit ecosystem=pip package_upload -u $PPU -p $PPP -r ${PYPI}
